<?xml version="1.0" encoding="UTF-8"?>
<model version="5.1.4" links="1">
 <documentation>QHsmTst is a contrived state machine from Chapter 2 of the PSiCC2 book for testing all possible transition topologies with up to 4-levels of state nesting.</documentation>
 <!--${qpn}-->
 <framework name="qpn"/>
 <!--${HSMs}-->
 <package name="HSMs" stereotype="0x02">
  <!--${HSMs::QHsmTst}-->
  <class name="QHsmTst" superclass="qpn::QHsm">
   <documentation>Test active object</documentation>
   <!--${HSMs::QHsmTst::foo}-->
   <attribute name="foo" type="uint8_t" visibility="0x02" properties="0x00"/>
   <!--${HSMs::QHsmTst::obj}-->
   <attribute name="obj" type="QHsmTst" visibility="0x02" properties="0x01"/>
   <!--${HSMs::QHsmTst::SM}-->
   <statechart properties="0x01">
    <!--${HSMs::QHsmTst::SM::initial}-->
    <initial target="../1/5">
     <action>me-&gt;foo = 0U;
BSP_display(&quot;top-INIT;&quot;);</action>
     <initial_glyph conn="121,10,4,1,5,-10">
      <action box="-9,7,13,4"/>
     </initial_glyph>
    </initial>
    <!--${HSMs::QHsmTst::SM::s}-->
    <state name="s">
     <entry>BSP_display(&quot;s-ENTRY;&quot;);</entry>
     <exit>BSP_display(&quot;s-EXIT;&quot;);</exit>
     <!--${HSMs::QHsmTst::SM::s::initial}-->
     <initial target="../4/8">
      <action>BSP_display(&quot;s-INIT;&quot;);</action>
      <initial_glyph conn="67,13,5,0,-17,24">
       <action box="-1,0,6,2"/>
      </initial_glyph>
     </initial>
     <!--${HSMs::QHsmTst::SM::s::I}-->
     <tran trig="I">
      <!--${HSMs::QHsmTst::SM::s::I::[me->foo]}-->
      <choice>
       <guard>me-&gt;foo</guard>
       <action>me-&gt;foo = 0U;
BSP_display(&quot;s-I;&quot;);</action>
       <choice_glyph conn="14,17,5,-1,7">
        <action box="3,-5,12,4"/>
       </choice_glyph>
      </choice>
      <tran_glyph conn="3,17,3,-1,11">
       <action box="1,-2,6,2"/>
      </tran_glyph>
     </tran>
     <!--${HSMs::QHsmTst::SM::s::E}-->
     <tran trig="E" target="../4/8">
      <action>BSP_display(&quot;s-E;&quot;);</action>
      <tran_glyph conn="53,61,2,2,-7">
       <action box="1,-2,6,2"/>
      </tran_glyph>
     </tran>
     <!--${HSMs::QHsmTst::SM::s::TERMINATE}-->
     <tran trig="TERMINATE">
      <action>BSP_exit();</action>
      <tran_glyph conn="114,26,1,-1,5,18">
       <action box="3,-3,9,2"/>
      </tran_glyph>
     </tran>
     <!--${HSMs::QHsmTst::SM::s::s1}-->
     <state name="s1">
      <entry>BSP_display(&quot;s1-ENTRY;&quot;);</entry>
      <exit>BSP_display(&quot;s1-EXIT;&quot;);</exit>
      <!--${HSMs::QHsmTst::SM::s::s1::initial}-->
      <initial target="../8">
       <action>BSP_display(&quot;s1-INIT;&quot;);</action>
       <initial_glyph conn="57,26,5,0,-5,11">
        <action box="-4,0,6,2"/>
       </initial_glyph>
      </initial>
      <!--${HSMs::QHsmTst::SM::s::s1::history}-->
      <history type="deep" target="../8">
       <history_glyph conn="59,31,4,0,-2,-5,8"/>
      </history>
      <!--${HSMs::QHsmTst::SM::s::s1::D}-->
      <tran trig="D">
       <!--${HSMs::QHsmTst::SM::s::s1::D::[!me->foo]}-->
       <choice target="../../..">
        <guard>!me-&gt;foo</guard>
        <action>me-&gt;foo = 1U;
BSP_display(&quot;s1-D;&quot;);</action>
        <choice_glyph conn="14,24,5,3,-11">
         <action box="-10,1,11,4"/>
        </choice_glyph>
       </choice>
       <tran_glyph conn="22,24,3,-1,-8">
        <action box="-2,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s1::A}-->
      <tran trig="A" target="..">
       <action>BSP_display(&quot;s1-A;&quot;);</action>
       <tran_glyph conn="52,19,0,0,-3,7,3">
        <action box="8,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s1::B}-->
      <tran trig="B" target="../8">
       <action>BSP_display(&quot;s1-B;&quot;);</action>
       <tran_glyph conn="22,46,3,3,7,-1,7,1,7">
        <action box="4,1,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s1::F}-->
      <tran trig="F" target="../../5/4/4">
       <action>BSP_display(&quot;s1-F;&quot;);</action>
       <tran_glyph conn="62,48,1,3,22">
        <action box="0,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s1::C}-->
      <tran trig="C" target="../../5">
       <action>BSP_display(&quot;s1-C;&quot;);</action>
       <tran_glyph conn="62,24,1,3,9">
        <action box="0,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s1::s12}-->
      <state name="s12">
       <entry>BSP_display(&quot;S12-ENTRY;&quot;);</entry>
       <exit>BSP_display(&quot;S12-EXIT;&quot;);</exit>
       <state_glyph node="25,25,15,12">
        <entry box="1,2,6,2"/>
        <exit box="1,4,6,2"/>
       </state_glyph>
      </state>
      <!--${HSMs::QHsmTst::SM::s::s1::s11}-->
      <state name="s11">
       <entry>BSP_display(&quot;s11-ENTRY;&quot;);</entry>
       <exit>BSP_display(&quot;s11-EXIT;&quot;);</exit>
       <!--${HSMs::QHsmTst::SM::s::s1::s11::H}-->
       <tran trig="H" target="../../..">
        <action>BSP_display(&quot;s11-H;&quot;);</action>
        <tran_glyph conn="49,54,2,2,7">
         <action box="1,0,6,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s1::s11::D}-->
       <tran trig="D">
        <!--${HSMs::QHsmTst::SM::s::s1::s11::D::[me->foo]}-->
        <choice target="../../..">
         <guard>me-&gt;foo</guard>
         <action>me-&gt;foo = 0U;
BSP_display(&quot;s11-D;&quot;);</action>
         <choice_glyph conn="9,53,4,3,-3,13">
          <action box="1,-8,11,4"/>
         </choice_glyph>
        </choice>
        <tran_glyph conn="43,53,3,-1,-34">
         <action box="-2,-2,6,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s1::s11::G}-->
       <tran trig="G" target="../../../5/4/4">
        <action>BSP_display(&quot;s11-G;&quot;);</action>
        <tran_glyph conn="56,44,1,3,28">
         <action box="0,-2,6,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s1::s11::I}-->
       <tran trig="I" target="../../7">
        <action>BSP_display(&quot;S11-I;&quot;);</action>
        <tran_glyph conn="43,42,3,2,-11,-5">
         <action box="-10,-2,10,2"/>
        </tran_glyph>
       </tran>
       <state_glyph node="43,37,13,17">
        <entry box="1,2,5,2"/>
        <exit box="1,4,5,2"/>
       </state_glyph>
      </state>
      <state_glyph node="22,19,40,38">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <!--${HSMs::QHsmTst::SM::s::s2}-->
     <state name="s2">
      <entry>BSP_display(&quot;s2-ENTRY;&quot;);</entry>
      <exit>BSP_display(&quot;s2-EXIT;&quot;);</exit>
      <!--${HSMs::QHsmTst::SM::s::s2::initial}-->
      <initial target="../4/4">
       <action>BSP_display(&quot;s2-INIT;&quot;);</action>
       <initial_glyph conn="95,17,5,0,-8,14">
        <action box="1,0,6,2"/>
       </initial_glyph>
      </initial>
      <!--${HSMs::QHsmTst::SM::s::s2::I}-->
      <tran trig="I">
       <!--${HSMs::QHsmTst::SM::s::s2::I::[!me->foo]}-->
       <choice>
        <guard>!me-&gt;foo</guard>
        <action>me-&gt;foo = 1U;
BSP_display(&quot;s2-I;&quot;);</action>
        <choice_glyph conn="75,21,5,-1,8">
         <action box="1,-4,10,4"/>
        </choice_glyph>
       </choice>
       <tran_glyph conn="71,21,3,-1,4">
        <action box="1,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s2::F}-->
      <tran trig="F" target="../../4" cpref="../../4/1">
       <action>BSP_display(&quot;s2-F;&quot;);</action>
       <tran_glyph conn="71,31,3,5,-12">
        <action box="-5,0,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s2::C}-->
      <tran trig="C" target="../../4">
       <action>BSP_display(&quot;s2-C;&quot;);</action>
       <tran_glyph conn="71,26,3,1,-9">
        <action box="-3,-2,6,2"/>
       </tran_glyph>
      </tran>
      <!--${HSMs::QHsmTst::SM::s::s2::s21}-->
      <state name="s21">
       <entry>BSP_display(&quot;s21-ENTRY;&quot;);</entry>
       <exit>BSP_display(&quot;s21-EXIT;&quot;);</exit>
       <!--${HSMs::QHsmTst::SM::s::s2::s21::initial}-->
       <initial target="../4">
        <action>BSP_display(&quot;s21-INIT;&quot;);</action>
        <initial_glyph conn="102,29,5,0,-12,2">
         <action box="1,0,5,2"/>
        </initial_glyph>
       </initial>
       <!--${HSMs::QHsmTst::SM::s::s2::s21::G}-->
       <tran trig="G" target="../../../4">
        <action>BSP_display(&quot;s21-G;&quot;);</action>
        <tran_glyph conn="78,28,3,1,-16">
         <action box="-3,-2,8,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s2::s21::A}-->
       <tran trig="A" target="..">
        <action>BSP_display(&quot;s21-A;&quot;);</action>
        <tran_glyph conn="93,25,0,0,-5,13,5">
         <action box="1,-2,6,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s2::s21::B}-->
       <tran trig="B" target="../4">
        <action>BSP_display(&quot;s21-B;&quot;);</action>
        <tran_glyph conn="109,35,1,1,-10">
         <action box="-2,-2,5,2"/>
        </tran_glyph>
       </tran>
       <!--${HSMs::QHsmTst::SM::s::s2::s21::s211}-->
       <state name="s211">
        <entry>BSP_display(&quot;s211-ENTRY;&quot;);</entry>
        <exit>BSP_display(&quot;s211-EXIT;&quot;);</exit>
        <!--${HSMs::QHsmTst::SM::s::s2::s21::s211::H}-->
        <tran trig="H" target="../../../..">
         <action>BSP_display(&quot;s211-H;&quot;);</action>
         <tran_glyph conn="87,49,2,2,12">
          <action box="1,0,6,2"/>
         </tran_glyph>
        </tran>
        <!--${HSMs::QHsmTst::SM::s::s2::s21::s211::D}-->
        <tran trig="D" target="../..">
         <action>BSP_display(&quot;s211-D;&quot;);</action>
         <tran_glyph conn="99,42,1,1,10">
          <action box="0,-2,6,2"/>
         </tran_glyph>
        </tran>
        <state_glyph node="84,31,15,18">
         <entry box="1,2,5,2"/>
         <exit box="1,4,5,2"/>
        </state_glyph>
       </state>
       <state_glyph node="78,25,31,27">
        <entry box="1,2,5,2"/>
        <exit box="1,4,5,2"/>
       </state_glyph>
      </state>
      <state_glyph node="71,13,40,44">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state_glyph node="3,8,111,53">
      <entry box="1,2,5,2"/>
      <exit box="1,4,5,2"/>
     </state_glyph>
    </state>
    <state_diagram size="127,81"/>
   </statechart>
  </class>
  <!--${HSMs::super_QHsmTst}-->
  <attribute name="super_QHsmTst" type="QHsm *const" visibility="0x00" properties="0x00">
   <code>= &amp;QHsmTst_obj.super;</code>
  </attribute>
  <!--${HSMs::QHsmTst_ctor}-->
  <operation name="QHsmTst_ctor" type="void" visibility="0x00" properties="0x00">
   <code>QHsm_ctor(super_QHsmTst, Q_STATE_CAST(&amp;QHsmTst_initial));</code>
  </operation>
 </package>
 <!--${../src}-->
 <directory name="../src">
  <!--${../src::QHSM_Test.cpp}-->
  <file name="QHSM_Test.cpp">
   <text>#include &lt;Arduino.h&gt;
#include &quot;qpn.h&quot;
#include &quot;QHSM_Test.h&quot;
#include &quot;bsp.h&quot;
$declare${HSMs::QHsmTst}
$define${HSMs::super_QHsmTst}
$define${HSMs::QHsmTst_ctor}
$define${HSMs::QHsmTst} </text>
  </file>
  <!--${../src::QHSM_Test.h}-->
  <file name="QHSM_Test.h">
   <text>#ifndef QHSM_TEST_H
#define QHSM_TEST_H

enum QHSM_Test_Signals{
    A_SIG = Q_USER_SIG,
    B_SIG,
    C_SIG,
    D_SIG,
    E_SIG,
    F_SIG,
    G_SIG,
    H_SIG,
    I_SIG,
    TERMINATE_SIG,
    IGNORE_SIG,
    MAX_SIG,
};

$declare${HSMs::super_QHsmTst}
$declare${HSMs::QHsmTst_ctor}



#endif </text>
  </file>
 </directory>
</model>
